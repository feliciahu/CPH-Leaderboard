USE ROLE SBX_EA_GENERAL_FR;
USE SECONDARY ROLES ALL;

--PULL MAX SALES DATE FOR ACTUALS
CREATE OR REPLACE TABLE MAX_DATE AS (
SELECT  MAX(FISC_YR_PERIOD) MAX_PERIOD
FROM    PRD_PSAS_ANALYTICS_DB.GOLD_VARICENT_COMP.VW_GROSS_PROFIT
WHERE   MKT_SGMNT = 'Retail');

--LOCATION ID
CREATE OR REPLACE TABLE LOC AS (
SELECT  LPAD(CUST_ACCT_ID,6,0) CUST_ACCT_ID, MAX(INA_LOC_ID) AS LOC_ID
FROM    PRD_PSAS_DB.RPT.T_LOCATION_MAP
WHERE   INA_LOC_ID IS NOT NULL
AND     CUST_ACCT_ID BETWEEN '000000' AND '999999' 
GROUP BY LPAD(CUST_ACCT_ID,6,0));

--CUSTOMER ATTRIBUTES
CREATE OR REPLACE TABLE CUST AS (
SELECT  CUST_ACCT_ID AS ACCOUNT_ID,
        CUST_ACCT_NAM AS ACCOUNT_NAME,
        SLS_TERR_ID AS TERRITORY_ID,
        HOME_DC_ID AS HOME_DC_ID,
        ACCT_DLVRY_ST_ABRV AS ACCOUNT_STATE
FROM    PRD_PSAS_ANALYTICS_DB.GOLD_MASTER.VW_CUST_MSTR
WHERE   CURRENT_RECORD_IND='Y'
GROUP BY CUST_ACCT_ID,
        CUST_ACCT_NAM,
        SLS_TERR_ID,
        HOME_DC_ID,
        ACCT_DLVRY_ST_ABRV);

--FIND AVP
CREATE OR REPLACE TABLE AVP AS (
SELECT DISTINCT VPS_NUM AS VPS_ID,VPS_NAME,AVP_NUM AS AVP_ID,AVP_NAME AS AVP_NAME
FROM PRD_PSAS_ANALYTICS_DB.GOLD_CRM.VW_REP_HIERARCHY
WHERE BUS_SGMNT='CPH' 
AND REP_GRP_NAME='FIELD SALES TEAM' 
AND VPS_NUM <> '' 
AND ROLE_TYPE IN ('COMBO REP','PSC') 
AND CURRENT_RECORD_IND='Y'
GROUP BY VPS_NUM,VPS_NAME,AVP_NUM,AVP_NAME);

--PULL ACTUALS
CREATE OR REPLACE TABLE PREP AS (
--SELECT DISTINCT FISC_YR_PERIOD FROM PRD_PSAS_ANALYTICS_DB.GOLD_VARICENT_COMP.VW_REP_ACCT_TRGTS WHERE FISC_YR_PERIOD LIKE '2025%'
--SELECT * FROM PRD_PSAS_ANALYTICS_DB.GOLD_VARICENT_COMP.VW_GROSS_PROFIT_ACTLS WHERE FISC_YR_MTH LIKE '2025%'
--SELECT * FROM PRD_PSAS_ANALYTICS_DB.GOLD_VARICENT_COMP.VW_GROSS_PROFIT WHERE FISC_YR_PERIOD LIKE '2025%'

SELECT  REP_EMPLY_ID AS PAYEE_ID,
        REP_NAME AS PAYEE_NAME,
        BUS_ROLE_ID AS ROLE,
        BUS_ROLE_NAME AS ROLE_NAME,
        CUST_ACCT_ID AS ACCOUNT_ID,
        CUST_ACCT_NAME AS ACCOUNT_NAME,
        ACCT_ST AS ACCOUNT_STATE,
        HOME_DC_ID,
        SLS_TERR_ID AS TERRITORY_ID,
        FISC_YR_PERIOD AS PERIOD,
        PROD_SGMNT AS PRODUCT_SEGMENT,
        --GROSS PROFIT ACTUALS
        SUM(GROSS_PROFIT) AS GROSS_PROFIT_ACTUAL,
        --NET REVENUE ACTUALS
        SUM(NET_REVENUE) AS NET_REVENUE_ACTUAL,
        --GENERIC UNITS ACTUALS
        SUM(GNRC_UNITS) AS GENERIC_UNITS_ACTUAL,
        0 AS GROSS_PROFIT_GOAL,
        0 AS NET_SALES_GOAL
FROM    PRD_PSAS_ANALYTICS_DB.GOLD_VARICENT_COMP.VW_GROSS_PROFIT
WHERE   MKT_SGMNT = 'Retail'
AND     FISC_YR_PERIOD NOT LIKE '%2023%'
GROUP BY REP_EMPLY_ID,
        REP_NAME,
        BUS_ROLE_ID,
        BUS_ROLE_NAME,
        CUST_ACCT_ID,
        CUST_ACCT_NAME,
        ACCT_ST,
        HOME_DC_ID,
        SLS_TERR_ID,
        FISC_YR_PERIOD,
        PROD_SGMNT
UNION ALL
SELECT  REP_EMPLY_ID AS PAYEE_ID,
        REP_NAME AS PAYEE_NAME,
        BUS_ROLE_ID AS ROLE,
        BUS_ROLE_NAME AS ROLE_NAME,
        CUST_ACCT_ID AS ACCOUNT_ID,
        CUST.ACCOUNT_NAME,
        CUST.ACCOUNT_STATE,
        CUST.HOME_DC_ID,
        CUST.TERRITORY_ID,
        FISC_YR_PERIOD AS PERIOD,
        'GOALS' AS PRODUCT_SEGMENT,
        --GROSS PROFIT ACTUALS
        0 AS GROSS_PROFIT_ACTUAL,
        --NET REVENUE ACTUALS
        0 AS NET_REVENUE_ACTUAL,
        --GENERIC UNITS ACTUALS
        0 AS GENERIC_UNITS_ACTUAL,
        SUM(CASE WHEN MTRC_NAME = 'GROSS PROFIT' THEN GOAL_VAL ELSE 0 END) AS GROSS_PROFIT_GOAL,
        SUM(CASE WHEN MTRC_NAME = 'NET SALES' THEN GOAL_VAL ELSE 0 END) AS NET_SALES_GOAL
FROM    PRD_PSAS_ANALYTICS_DB.GOLD_VARICENT_COMP.VW_REP_ACCT_TRGTS TARGET
LEFT JOIN CUST
ON      LTRIM(TARGET.CUST_ACCT_ID,'0') = LTRIM(CUST.ACCOUNT_ID,'0')
WHERE   BUS_ROLE_ID NOT LIKE '%MHS%'
AND     MTRC_NAME = 'GROSS PROFIT'
AND     FISC_YR_PERIOD NOT LIKE '%2023%'
GROUP BY REP_EMPLY_ID,
        REP_NAME,
        BUS_ROLE_ID,
        BUS_ROLE_NAME,
        CUST_ACCT_ID,
        CUST.ACCOUNT_NAME,
        CUST.ACCOUNT_STATE,
        CUST.HOME_DC_ID,
        CUST.TERRITORY_ID,
        FISC_YR_PERIOD);      
 
--CREATE ACCOUNT TO VPS MAP LIST
CREATE OR REPLACE TABLE VPS AS (
SELECT  CUST_ACCT_ID AS ACCOUNT_ID,
        REP_EMPLY_ID AS PAYEE_ID, 
        REP_NAME AS PAYEE_NAME,
        FISC_YR_PERIOD AS PERIOD
FROM    PRD_PSAS_ANALYTICS_DB.GOLD_VARICENT_COMP.VW_GROSS_PROFIT
WHERE   MKT_SGMNT = 'Retail'
AND     BUS_ROLE_ID = 'USP_RETAIL_SM'
AND     FISC_YR_PERIOD NOT LIKE '%2023%'
GROUP BY ACCOUNT_ID,
        PAYEE_ID, 
        PAYEE_NAME,
        PERIOD
UNION
SELECT  CUST_ACCT_ID AS ACCOUNT_ID,
        REP_EMPLY_ID AS PAYEE_ID, 
        REP_NAME AS PAYEE_NAME,
        FISC_YR_PERIOD AS PERIOD
FROM    PRD_PSAS_ANALYTICS_DB.GOLD_VARICENT_COMP.VW_REP_ACCT_TRGTS
WHERE   BUS_ROLE_ID NOT LIKE '%MHS%'
AND     MTRC_NAME = 'GROSS PROFIT'
--AND     GOALTYPEID = 'ACCOUNT GOAL'
AND     BUS_ROLE_ID = 'USP_RETAIL_SM'
AND     FISC_YR_PERIOD NOT LIKE '%2023%'
GROUP BY CUST_ACCT_ID,
        REP_EMPLY_ID, 
        REP_NAME,
        FISC_YR_PERIOD);
                
--CLEAN-UP TABLE
CREATE OR REPLACE TABLE COMBINED AS (
SELECT  PREP.PAYEE_ID,
        PREP.PAYEE_NAME,
        CASE WHEN ROLE = 'USP_COMBO' THEN 'USP_RSM' ELSE ROLE END AS "ROLE",
        ROLE_NAME,
        PREP.ACCOUNT_ID,
        ACCOUNT_NAME,
        ACCOUNT_STATE,
        HOME_DC_ID,
        TERRITORY_ID,
        PREP.PERIOD,
        PRODUCT_SEGMENT,
        VPS_ORIG.PAYEE_ID AS VPS_PAYEE_ID,
        VPS_ORIG.PAYEE_NAME AS VPS_PAYEE_NAME,
        SUM(GROSS_PROFIT_ACTUAL) AS GROSS_PROFIT_ACTUAL,
        SUM(NET_REVENUE_ACTUAL) AS NET_REVENUE_ACTUAL,
        SUM(GENERIC_UNITS_ACTUAL) AS GENERIC_UNITS_ACTUAL,
        SUM(GROSS_PROFIT_GOAL) AS GROSS_PROFIT_GOAL,
        SUM(NET_SALES_GOAL) AS NET_SALES_GOAL
FROM    PREP
LEFT JOIN VPS VPS_ORIG
ON      LTRIM(PREP.ACCOUNT_ID,'0') = LTRIM(VPS_ORIG.ACCOUNT_ID,'0')
AND     PREP.PERIOD = VPS_ORIG.PERIOD
AND     PREP.ACCOUNT_ID <> '000000'
WHERE   PREP.PERIOD <= (SELECT MAX_PERIOD FROM MAX_DATE) --EXCLUDE MONTHS WITHOUT ACTUAL
GROUP BY PREP.PAYEE_ID,
        PREP.PAYEE_NAME,
        CASE WHEN ROLE = 'USP_COMBO' THEN 'USP_RSM' ELSE ROLE END,
        ROLE_NAME,
        PREP.ACCOUNT_ID,
        ACCOUNT_NAME,
        ACCOUNT_STATE,
        HOME_DC_ID,
        TERRITORY_ID,
        PREP.PERIOD,
        PRODUCT_SEGMENT,
        VPS_ORIG.PAYEE_ID,
        VPS_ORIG.PAYEE_NAME);

--GROSS PROFIT RANK
CREATE OR REPLACE TABLE GP_RANK AS (
SELECT      PAYEE_ID, 
            PAYEE_NAME,
            ROLE,
            ROLE_NAME,
            SUM(GROSS_PROFIT_ACTUAL) AS GROSS_PROFIT_ACTUAL,
            SUM(GROSS_PROFIT_GOAL) AS GROSS_PROFIT_GOAL,
            RANK() OVER (PARTITION BY ROLE ORDER BY CASE WHEN SUM(ZEROIFNULL(GROSS_PROFIT_ACTUAL))/ SUM(NULLIFZERO(GROSS_PROFIT_GOAL)) IS NULL THEN 0 ELSE SUM(ZEROIFNULL(GROSS_PROFIT_ACTUAL))/ SUM(NULLIFZERO(GROSS_PROFIT_GOAL)) END DESC) AS GROSS_PROFIT_RANK
FROM        COMBINED
WHERE       PERIOD <= (SELECT MAX_PERIOD FROM MAX_DATE) --EXCLUDE MONTHS WITHOUT ACTUAL
GROUP BY    PAYEE_ID,
            PAYEE_NAME,
            ROLE,
            ROLE_NAME);

--FINAL PULL
CREATE OR REPLACE TABLE FINAL_PREP AS (
SELECT      COMBINED.*,
            GP_RANK.GROSS_PROFIT_RANK,
            LOC.LOC_ID
FROM        COMBINED
LEFT JOIN   GP_RANK
ON          COMBINED.PAYEE_ID = GP_RANK.PAYEE_ID
AND         COMBINED.ROLE = GP_RANK.ROLE
LEFT JOIN   LOC
ON          COMBINED.ACCOUNT_ID = LOC.CUST_ACCT_ID
WHERE       PERIOD <= (SELECT MAX_PERIOD FROM MAX_DATE)); --EXCLUDE MONTHS WITHOUT ACTUAL

--ISAM
CREATE OR REPLACE TABLE ISAM AS ( 
SELECT DISTINCT CUST_ACCT_ID,REP_NAME,'ISAM' AS ROLE_TYPE,
CASE WHEN YR_MTH='2023-04-01' THEN '2024-01 APR'
     WHEN YR_MTH='2023-05-01' THEN '2024-02 MAY'
     WHEN YR_MTH='2023-06-01' THEN '2024-03 JUN'
     WHEN YR_MTH='2023-07-01' THEN '2024-04 JUL'
     WHEN YR_MTH='2023-08-01' THEN '2024-05 AUG'
     WHEN YR_MTH='2023-09-01' THEN '2024-06 SEP'
     WHEN YR_MTH='2023-10-01' THEN '2024-07 OCT'
     WHEN YR_MTH='2023-11-01' THEN '2024-08 NOV'
     WHEN YR_MTH='2023-12-01' THEN '2024-09 DEC'
     WHEN YR_MTH='2024-01-01' THEN '2024-10 JAN'
     WHEN YR_MTH='2024-02-01' THEN '2024-11 FEB'
     ELSE '2024-12 MAR' END AS PERIOD 
FROM SBX_PSAS_DB.ANALYTICS.T_CPH_ACCT_LEVEL_HIERARCHY -- ELLA'S TABLE
WHERE 
REP_TITLE='SSM'
AND YR_MTH>='2023-04-01' 
GROUP BY 1,2,3,4);

--FINAL PULL WITH UPDATE OF ACCOUNT NAME
CREATE OR REPLACE TABLE SBX_PSAS_DB.SALES_OPS_GOV.FY24_LEADERBOARD_MIGRATION AS
SELECT  DISTINCT   FINAL_PREP.PAYEE_ID
          , FINAL_PREP.PAYEE_NAME
          , FINAL_PREP.ROLE
          , FINAL_PREP.ROLE_NAME
          , FINAL_PREP.ACCOUNT_ID
          , CUST.ACCOUNT_NAME
          , FINAL_PREP.ACCOUNT_STATE
          , FINAL_PREP.HOME_DC_ID
          , FINAL_PREP.TERRITORY_ID
          , FINAL_PREP.PERIOD
          , FINAL_PREP.PRODUCT_SEGMENT
          , FINAL_PREP.VPS_PAYEE_ID
          , FINAL_PREP.VPS_PAYEE_NAME
          , FINAL_PREP.GROSS_PROFIT_ACTUAL
          , FINAL_PREP.NET_REVENUE_ACTUAL
          , FINAL_PREP.GENERIC_UNITS_ACTUAL
          , FINAL_PREP.GROSS_PROFIT_GOAL
          , FINAL_PREP.NET_SALES_GOAL
          , FINAL_PREP.GROSS_PROFIT_RANK
          , FINAL_PREP.LOC_ID
          , AVP.AVP_ID
          , AVP.AVP_NAME
          , CASE WHEN B.ROLE_TYPE IS NULL THEN FINAL_PREP.ROLE
            ELSE B.ROLE_TYPE END AS ROLE_NEW
          , CASE WHEN B.REP_NAME IS NULL THEN FINAL_PREP.PAYEE_NAME
            ELSE B.REP_NAME END AS REP_NEW
FROM      FINAL_PREP
LEFT JOIN CUST
ON        FINAL_PREP.ACCOUNT_ID = CUST.ACCOUNT_ID  
LEFT JOIN AVP
ON        FINAL_PREP.PAYEE_ID = AVP.VPS_ID
LEFT JOIN ISAM B
ON        FINAL_PREP.ACCOUNT_ID = B.CUST_ACCT_ID
AND       FINAL_PREP.PERIOD = B.PERIOD
GROUP BY  FINAL_PREP.PAYEE_ID
          , FINAL_PREP.PAYEE_NAME
          , FINAL_PREP.ROLE
          , FINAL_PREP.ROLE_NAME
          , FINAL_PREP.ACCOUNT_ID
          , CUST.ACCOUNT_NAME
          , FINAL_PREP.ACCOUNT_STATE
          , FINAL_PREP.HOME_DC_ID
          , FINAL_PREP.TERRITORY_ID
          , FINAL_PREP.PERIOD
          , FINAL_PREP.PRODUCT_SEGMENT
          , FINAL_PREP.VPS_PAYEE_ID
          , FINAL_PREP.VPS_PAYEE_NAME
          , FINAL_PREP.GROSS_PROFIT_ACTUAL
          , FINAL_PREP.NET_REVENUE_ACTUAL
          , FINAL_PREP.GENERIC_UNITS_ACTUAL
          , FINAL_PREP.GROSS_PROFIT_GOAL
          , FINAL_PREP.NET_SALES_GOAL
          , FINAL_PREP.GROSS_PROFIT_RANK
          , FINAL_PREP.LOC_ID
          , AVP.AVP_ID
          , AVP.AVP_NAME
          , CASE WHEN B.ROLE_TYPE IS NULL THEN FINAL_PREP.ROLE
            ELSE B.ROLE_TYPE END
          , CASE WHEN B.REP_NAME IS NULL THEN FINAL_PREP.PAYEE_NAME
            ELSE B.REP_NAME END;
            
-- CREATE OR REPLACE TABLE SBX_PSAS_DB.SALES_OPS_GOV.FY24_LEADERBOARD AS
-- SELECT * FROM SBX_PSAS_DB.SALES_OPS_GOV.FY24_LEADERBOARD_MIGRATION;
